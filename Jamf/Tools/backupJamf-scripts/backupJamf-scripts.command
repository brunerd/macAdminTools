#!/bin/bash
#backupJamf-scripts - download all scripts quickly via API, create CSVs of script meta-data (parameter, priority, etc...) updated for Bearer token (20240927)

: <<-LICENSE_BLOCK
Copyright (c) 2020 Joel Bruner (https://github.com/brunerd)
Other portions: Copyright (c) 2007 Stefan Goessner (goessner.net), Copyright (c) 2020 "jpaquit" (https://github.com/jpaquit), Copyright (c) 2016 Kris Nye, Copyright (c) 2012 Dharmafly
Licensed under the MIT License. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
LICENSE_BLOCK

#debug - hold the command key down for xtrace debugging when you run this script
commandKeyDown=$(osascript -l JavaScript -e "ObjC.import('Cocoa'); ($.NSEvent.modifierFlags & $.NSEventModifierFlagCommand) > 1" 2>/dev/null)
#set xtraceFlag if /tmp/debug found or Command key is held down
[ -f /tmp/debug -o "$commandKeyDown" = "true" ] && xtraceFlag=1
[ -n "$xtraceFlag" ] && set -x

#############
# VARIABLES #
#############

#hardcode or if blank will be prompted interactively
APIURL=""
APIUSER=""

######################
# COMPUTED VARIABLES #
######################

myFolderPath=$(dirname "${0}")
dateStampNow=$(date +"%Y%m%d-%H%M")

#############
# FUNCTIONS #
#############

function jpt()( #v1.0.9 jpt([options] [query] [fileArg])
{ set +x; } &> /dev/null
: <<-LICENSE_BLOCK
jpt - JSON Power Tool (for more info: https://github.com/brunerd/jpt)
Copyright (c) 2020 Joel Bruner
Other portions: Copyright (c) 2007 Stefan Goessner (goessner.net), Copyright (c) 2020 "jpaquit" (https://github.com/jpaquit), Copyright (c) 2016 Kris Nye, Copyright (c) 2012 Dharmafly
Licensed under the MIT License
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
LICENSE_BLOCK

#help text - remove to save 14k
read -r -d '' helpText <<'EOT'
jpt (v1.0.9) - JSON Power Tool (https://github.com/brunerd/jpt)\n\nUsage:\njpt [options] [<query>] [<file>]\n\nArguments:\n\t[<query>] - JSONPath, JSON Pointer, or plutil-style keypath expression (optional), returns entire document otherwise.\n\t[<file>] - path to JSON file\n\nNotes:\n\tDefault output mode is JSON (RFC8259/STD90)\n\tMultiple JSON texts will be output as a JSON Text Sequence (RFC 7464) (use -M to change behavior and processing)\n\tjpt accepts input by file redirection, Unix pipe, here string, heredoc and via /dev/stdin (end with Control-D)\n\tjpt accepts JSON, JSON text Sequences, and non-JSON mutations such as JSON5, NDJSON and jpt's own JSONPath Object Literals\n\tJSON Text Sequences will be strictly parsed to RFC 7464 specs, non-JSON elements are only tolerated in single and concatenated JSON texts\n\tNon-JSON elements are corrected automatically, if possible, before parsing (use -c for comments via stderr with an exit status of 1)\n\t  JSON5 Rehabilitations (mostly):\n\t    Unquoted object keys and single quoted strings are converted to JSON strings\n\t    Additional Unicode whitespaces and paragraph separators are converted to normal spaces (0x20) and newlines (0x0A)\n\t    Trailing commas are removed from object and array elements\n\t    Explicit plus signs on numbers are removed, decimals without leading zeroes are restored\n\t    Multi-line strings with escaped line breaks are reverted to standard JSON strings\n\t      Literal tabs in strings are removed also\n\t    Escaped character conversions: \n\t\t  \\0 to null\n\t\t  \\v to '\\u000c'\n\t    JSON5 number type conversions: \n\t\t  NaN to null (use -8 to convert to "NaN" string)\n\t\t  Inifinity to null (use -I to convert to "Infinity" string, with sign if specified)\n\t    Single-line (//) and multi-line (/* */) style comments are removed\n\t\t  Additionally multi-line XML (<!-- -->) and single line Shell (#), ASM (;), and Lua (--) comments are removed\n\t\nGeneral Options:\n\t-h this help screen\n\nJSON Output Options:\n\t-i "<number/string>" indent number of spaces (0-10) or use a <string> for each level of indent\n\t-O Order property names in objects alphabetically\n\t-u Unicode escape (\\u) all characters above 0x7E\n\nAdvanced JSON Output Options:\n\t-a always output result in an array\n\t-c comment on corrections to non-standard JSON via stderr output (with exit status of 1)\n\t-F Flatten array output\n\t-I Convert JSON5 +/-Infinity value to a string with signedness (otherwise converts to null)\n\t-N Nested single element arrays are reduced\n\t-8 Convert JSON5 NaN to a string (otherwise converts to null)\n\t-/ Escape solidus / with a reverse solidus like \\/, useful for HTML with embedded JSON encoded HTML\n\nInput Options:\n\t-D Detect truncation within objects and arrays in concatenated JSON only\n\t-g path-only JSONPath Object Literals are assigned a value of null ("gratis nulls")\n\t-G Guard previously defined JSONPath Object Literals from being modified by new statements\n\t-H Help truncated JSON by closing up open strings, objects and arrays\n\t-S Treat input as a JSON string\n\nMultiple JSON Text Options:\n\t-M "<value>" - options for working with multiple JSON texts\n\t\tS - Output JSON Text Sequences strictly conforming to RFC 7464 (default)\n\t\tN - Output newline delimited JSON texts\n\t\tC - Output concatenated JSON texts\n\t\tA - Gather JSON texts into an array, post-query and post-patching\n\t\ta - Gather JSON texts into an array, pre-query and pre-patching \n\nAlternate Output Modes (non-JSON):\n\t-l output the length of the resulting array, object property count, or length of string\n\n\t-J JSONPath path(s) of the object returned by the query\n\t-j JSONPath path(s) matched by the query results\n\n\t-R JSON Pointer path(s) of the object returned by the query\n\t-r JSON Pointer path(s) matched by the query results\n\t\tSpecifiying -EW or -Ew encodes both -r and -R JSON Pointer paths in URI fragment style\n\n\t  -J and -R path output options:\n\t\t-C append the "constructor" type (Array, Object, String, Boolean, Number, or null)\n\t\t-K/-k print property (key) names and array indices only with no preceding path, default indent is 2\n\t\t\t-i "<value>" indent spaces (0-10) or character for each level of indent\n\n\t-L JSONPath Object Literal notation output of the resulting object\n\t\tJPOL Format: <JSONPath expression>=<JSON value>\n\t\t\t<JSONPath expression> is simply Javascript expression syntax with $ as the object name\n\t\t\t\tExample: $.key, $["key"], $['key'], or $[0]\n\t\t\t<JSON value> is any valid JSON value (plus single quoted strings)\n\t\t\t\tExample: 'string', "string", [], {}, 42, true, false, null\n\n\t  JSONPath output options for -L -J and -j:\n\t\t-d Use dot notation for object property names when possible, rather than bracket notation\n\t\t-q Use single quotes for bracketed property names, string values remain JSON double quoted\n\t\t-Q Use single quotes for BOTH bracketed property names AND string values (-L only)\n\t\t-u encode characters above 7E with \\u escape\n\n\t  Output limiting options for -L, -J, and -R:\n\t\t-P Only print Primitive data types (String, Boolean, Number, null) omitting Arrays and Objects\n\t\t-Z "<int>" Depth\n\t\t\tCombined with -L it will coalesce lower depth levels into a compound JSON object/array statement\n\t\t\tCombined with -P both -J and -R will return only purely primitive nodes at or below the Z level\n\n\t-T textual output of all data (omits property names and indices)\n\t  Options:\n\t\t-e encode whitespace and escapes: \\b \\f \\n \\r \\t \\v and \\\\ (\\ escaped formats only)\n\t\t-i "<value>" indent spaces (0-10) or character string for each level of indent\n\t\t-n convert null value to string 'null' (pre-encoding)\n\n\t\t-E "<value>" encoding options for -T output:\n\n\t\t  Encodes string characters below 0x20 and above 0x7E with pass-through for all else:\n\t\t\tx \t"\\x" prefixed hexadecimal UTF-8 strings\n\t\t\tO \t"\\nnn" style octal for UTF-8 strings\n\t\t\t0 \t"\\0nnn" style octal for UTF-8 strings\n\t\t\tu \t"\\u" prefixed Unicode for UTF-16 strings\n\t\t\tU \t"\\U "prefixed Unicode Code Point strings\n\t\t\tE \t"\\u{...}" prefixed ES2016 Unicode Code Point strings\n\t\t\tW \t"%nn" Web encoded UTF-8 string using encodeURI (respects scheme and domain of URL)\n\t\t\tw \t"%nn" Web encoded UTF-8 string using encodeURIComponent (encodes all components URL)\n\n\t\t\t  -W encodes whitespace characters also\n\t\t\t  -A encodes ALL characters\n\t\t\n\t\t  Encodes both strings and numbers with pass-through for all else:\n\t\t\th \t"0x" prefixed lowercase hexadecimal, UTF-8 strings\n\t\t\tH \t"0x" prefixed uppercase hexadecimal, UTF-8 strings\n\t\t\to \t"0o" prefixed octal, UTF-8 strings\n\t\t\t6 \t"0b" prefixed binary, 16 bit _ spaced numbers and UTF-16 strings\n\t\t\tB \t"0b" prefixed binary, 8 bit _ spaced numbers and UTF-16 strings\n\t\t\tb \t"0b" prefixed binary, 8 bit _ spaced numbers and UTF-8 strings\n\n\t\t\t  -U whitespace is left untouched (not encoded)\n\nData Processing:\n\tjpt can apply JSON Patch (RFC 6902), JSON Merge Patch (RFC 7396), and other operations to JSON text(s)\n\n\tJSON Patch processing:\n\t\t-X "<filepath to JSON Patch>" a file path to a JSON Patch array (RFC 6902)\n\t\t-x "<inline JSON Patch>" inline JSON Patch text (RFC 6902)\n\t\t\n\tJSON Patch Example (from RFC 6902):\n\t\t [\n\t\t\t { "op": "test", "path": "/a/b/c", "value": "foo" },\n\t\t\t { "op": "remove", "path": "/a/b/c" },\n\t\t\t { "op": "add", "path": "/a/b/c", "value": [ "foo", "bar" ] },\n\t\t\t { "op": "replace", "path": "/a/b/c", "value": 42 },\n\t\t\t { "op": "move", "from": "/a/b/c", "path": "/a/b/d" },\n\t\t\t { "op": "copy", "from": "/a/b/d", "path": "/a/b/e" }\n\t\t]\n\n\tSingle operations for JSON Patch, JSON Merge Patch, and others can be crafted using -o plus -p (path) and possibly -f (from) or -v/-V (value)\n\n\t\t-o "<operation>":\n\t\t [JSON Patch Operations]\n\t\t  add\n\t\t\t-o add -p "<path>" -v "<value>"\n\t\t\t\tadd/replace value in object or insert value into array index (RFC 6902)\n\t\t  replace\n\t\t\t-o replace -p "<path>" -v "<value>"\n\t\t\t\treplace value of existing object property (key) or array index (RFC 6902)\n\t\t  remove\n\t\t\t-o remove -p "<path>"\n\t\t\t\tremove specified path from the document (RFC 6902)\n\t\t  move\n\t\t\t-o move -f "<from>" -p "<path>"\n\t\t\t\tmove a path to a new or existing path/node(RFC 6902)\n\t\t  copy\n\t\t\t-o copy -f "<from>" -p "<path>"\n\t\t\t\tcopy a path to a new or existing path/node (RFC 6902)\n\t\t  test\n\t\t\t-o test -p "<path>" -v "<value>"\n\t\t\t\ttest if a path matches a value exactly (RFC 6902), return 0 if true, 1 if false\n\n\t\t [Other Operations]\n\t\t  diff\n\t\t\t-o diff -v "<value>"\n\t\t\t\tGiven a value, compare with JSON text and produce a JSON Merge Patch (RFC 7396) document\n\t\t  mergepatch\n\t\t\t-o mergepatch (-v/-V "<value>" || -f "<path>") [-p <path>]\n\t\t\t\tJSON Merge Patch (RFC 7396) operation: null values delete target object property\n\t\t\t\tCan pull data from -v/-V "<value>" OR -f "<path>", can merge to specific -p "<path>" (JSONPaths allows multiple)\n\t\t  merge\n\t\t\t-o merge (-v/-V "<value>" || -f "<path>") [-p "<path>"]\n\t\t\t\tNon-RFC 7396 merging operation, object properties with null values are NOT removed\n\t\t\t\tCan pull data from -v/-V "<value>" or -f "<path>", can merge to specific -p "<path>" (JSONPaths allows multiple)\n\t\t  merge0\n\t\t\t-o merge0 (-v/-V "<value>" || -f "<path>") [-p "<path>"]\n\t\t\t\tMerge object properties that DO NOT intersect with source JSON\n\t\t\t\tCan pull data from -v/-V "<value>" or -f "<path>", can merge to specific -p "<path>" (JSONPaths allows multiple)\n\t\t  merge1\n\t\t\t-o merge1 (-v/-V "<value>" || -f "<path>") [-p "<path>"]\n\t\t\t\tMerge object properties that intersect with source JSON\n\t\t\t\tCan pull data from -v/-V "<value>" or -f "<path>", can merge to specific -p "<path>" (JSONPaths allows multiple)\n\t\t\t\t\n\t\t-p "<path>":\n\t\t\t-p "<path>" the target path expressed in JSON Pointer (RFC 6901) or JSONPath\n\n\t\t-f "<from path>":\n\t\t\tcopy and move require a JSON Pointer (RFC 6901) or JSONPath expression\n\n\t\t-v/-V "<value>":\n\t\t\t-v "<JSON value>" is a single JSON text\n\t\t\t-V "<filespec to JSON value>" is a file path to a single JSON text\n\t\t  Options for -v/-V:\n\t\t\t-s treat input as a string\n\t\t\t\t\nJSONPath Primer\n\t$\n\t\tthe root of the JSON document, ALL JSONPath QUERIES MUST BEGIN WITH $\n\t.key or ['key']\n\t\ta "child" operator for an object property named 'key' in a JSON object\n\t..key or ..['key']\n\t\tis a recursive operator that will find all properties named 'key' within the object\n\t['key name'] or ["key \ud83d\udd11"]\n\t\tproperty names with spaces or escaped values MUST use bracket notation\n\t.* or [*]\n\t\t* returns the values of all the keys within an object or all indices in an array\n\t[start:stop:step]\n\t\tslice operation for arrays, accepts pos/neg integers, script and filter expressions, or leave empty\n\t[?(@.id >= 1 && @.id <= 10 )] or [?(@.key == "string" && !@['key2'])] or the off-spec [?(@name =~ /key.*/)], etc...\n\t\tfilter expressions can return one or more matching objects within an array\n\t\t@ is the current object, dot and bracket notation can be used to query child nodes\n\t\tUse logical operators like: == (equal), != (not equal), > (greater than), < (less than), >= (greater or equal), <= (less or equal)\n\t\tMultiple criteria can be evaluated with && (AND) and || (OR). Regular expressions can also be used: '=~ /regexp/'\n\t\tYou can negate a value using !\n\t\t@.length is the length of an array or string\n\t\t@name is the current property name (an off-spec but useful quirk of the original Goessner code)\n\t[(@.length/2)]\n\t\t"script expression", returns a single value, use as an array index selector that allow division\n\t\tNote: These will NOT make it into the IETF JSONPath spec\n\t[1] or [-1]\n\t\tarray index, integers only, positive starts at the beginning, negative references from the end \n\t["-"]\n\t\tThe nonexistent array member after the last array element\n\t\tUse with data alteration operations, will always be empty for queries of arrays\n\t\tAkin to /- in JSON Pointer, if used with an object simply looks for a key named "-"\n\t["a","b"]\n\t\tunion, a comma separated list of expressions values of multiple properties at the same level in an object\n\t\tUnions allow for: quoted property names (single or double), numbers, *, filter and script expressions, and slices\n\n\tFor more examples: https://github.com/brunerd/jsonpath\n\t\nJSON Pointer (RFC 6901) Primer\n\t""\t\tan empty string represents the JSON document\n\t/\t\tis the root or next child node with a property named "" an empty string (JSONPath $[""])\n\t/key\t\tproperty named key in an object\n\t/1\t\tproperty named 1 in an object or a numeric index in an array\n\t/-\t\tthe nonexistent array member after the last array element, use with data alteration operations\n\t~\t\tin a property name must be escaped as ~0\n\t/\t\tin a property name must be escaped as ~1\n\n\tExample: /JSON pointer/does/this/1/thing/well\n\nkeypath primer:\n\tThis arcane summoning hails from ye olde NextStep and still used by plutil\n\t\n\t.\t\ta period is used to delimit key names, \n\t\t\t\tliteral periods can be backslash (\\) escaped\n\tkey\t\tan object name or array element, there is no root character\n\t\t\t\t\t\t\t\t\n\tKeypath Example: this.is.1.ugly.key\\.path\n\n\tIn JSON Pointer: /this/is/1/ugly/key.path\n\tAnd in JSONPath: $.this.is[1].ugly.["key.path"]\n\n\tNote: If a keypath query begins with characters that collide with JSONPath ($), jq-style (. or [) or JSON Pointer (/) it will be evaluated as one of those.
EOT

#JavaScript
read -r -d '' JSCode <<-'EOT'
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,f,e){if(a==Array.prototype||a==Object.prototype)return a;a[f]=e.value;return a};$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var f=0;f<a.length;++f){var e=a[f];if(e&&e.Math==Math)return e}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,f,e){if(!e||null!=a){e=$jscomp.propertyToPolyfillSymbol[f];if(null==e)return a[f];e=a[e];return void 0!==e?e:a[f]}};$jscomp.polyfill=function(a,f,e,d){f&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,f,e,d):$jscomp.polyfillUnisolated(a,f,e,d))};$jscomp.polyfillUnisolated=function(a,f,e,d){e=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var g=a[d];if(!(g in e))return;e=e[g]}a=a[a.length-1];d=e[a];f=f(d);f!=d&&null!=f&&$jscomp.defineProperty(e,a,{configurable:!0,writable:!0,value:f})};$jscomp.polyfillIsolated=function(a,f,e,d){var g=a.split(".");a=1===g.length;d=g[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var r=0;r<g.length-1;r++){var p=g[r];if(!(p in d))return;d=d[p]}g=g[g.length-1];e=$jscomp.IS_SYMBOL_NATIVE&&"es6"===e?d[g]:null;f=f(e);null!=f&&(a?$jscomp.defineProperty($jscomp.polyfills,g,{configurable:!0,writable:!0,value:f}):f!==e&&(void 0===$jscomp.propertyToPolyfillSymbol[g]&&(e=1E9*Math.random()>>>0,$jscomp.propertyToPolyfillSymbol[g]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(g):$jscomp.POLYFILL_PREFIX+e+"$"+g),$jscomp.defineProperty(d,$jscomp.propertyToPolyfillSymbol[g],{configurable:!0,writable:!0,value:f})))};$jscomp.polyfill("Math.sign",function(a){return a?a:function(f){f=Number(f);return 0===f||isNaN(f)?f:0<f?1:-1}},"es6","es3");$jscomp.polyfill("Array.prototype.flat",function(a){return a?a:function(f){f=void 0===f?1:f;var e=[];Array.prototype.forEach.call(this,function(d){Array.isArray(d)&&0<f?(d=Array.prototype.flat.call(d,f-1),e.push.apply(e,d)):e.push(d)});return e}},"es9","es5");$jscomp.arrayIteratorImpl=function(a){var f=0;return function(){return f<a.length?{done:!1,value:a[f++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.initSymbol=function(){};$jscomp.polyfill("Symbol",function(a){if(a)return a;var f=function(r,p){this.$jscomp$symbol$id_=r;$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:p})};f.prototype.toString=function(){return this.$jscomp$symbol$id_};var e="jscomp_symbol_"+(1E9*Math.random()>>>0)+"_",d=0,g=function(r){if(this instanceof g)throw new TypeError("Symbol is not a constructor");return new f(e+(r||"")+"_"+d++,r)};return g},"es6","es3");$jscomp.polyfill("Symbol.iterator",function(a){if(a)return a;a=Symbol("Symbol.iterator");for(var f="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),e=0;e<f.length;e++){var d=$jscomp.global[f[e]];"function"===typeof d&&"function"!=typeof d.prototype[a]&&$jscomp.defineProperty(d.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}})}return a},"es6","es3");$jscomp.iteratorPrototype=function(a){a={next:a};a[Symbol.iterator]=function(){return this};return a};$jscomp.iteratorFromArray=function(a,f){a instanceof String&&(a+="");var e=0,d=!1,g={next:function(){if(!d&&e<a.length){var r=e++;return{value:f(r,a[r]),done:!1}}d=!0;return{done:!0,value:void 0}}};g[Symbol.iterator]=function(){return g};return g};$jscomp.polyfill("Array.prototype.keys",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(f){return f})}},"es6","es3");function jsonPath(a,f,e){var d={resultType:e&&e.resultType||"VALUE",singleQuoteKeys:e&&e.singleQuoteKeys||!1,escapeUnicode:e&&e.escapeUnicode||!1,result:[],normalize:function(g){if(null===g.constructor||g.constructor!==String)return g},asPath:function(g){if("PATH_OBJECT"===d.resultType)return{path:g};var r=d.singleQuoteKeys?"'":'"',p="PATH_JSONPOINTER"===d.resultType?"":"$";g=g.slice();for(var m=0,c=g.length;m<c;m++)p="PATH_JSONPOINTER"===d.resultType?p+("/"+(g[m].constructor===Number?g[m]:g[m].replace(/~/g,"~0").replace(/\//g,"~1"))):p+(g[m].constructor===Number?"["+g[m]+"]":"PATH_DOTTED"===d.resultType&&/^[A-Za-z_$][\w\d$]*$/.test(g[m])?"."+g[m]:"["+r+g[m].replace(d.escapeUnicode?/[\u0000-\u001f\u007f-\uffff|\\|"|']/g:/[\u0000-\u001f\u007f|\\|"|']/g,function(n){switch(n){case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";case "\\":return"\\\\";case '"':return d.singleQuoteKeys?'"':'\\"';case "'":return d.singleQuoteKeys?"\\'":"'";default:return"\\u"+("0000"+n.charCodeAt(0).toString(16)).slice(-4)}})+r+"]");return p},store:function(g,r){d.escapeUnicode&&null!==r&&r.constructor===String&&(r=r.replace(/[\u007F-\uFFFF]/g,function(p){return"\\u"+("0000"+p.charCodeAt(0).toString(16)).slice(-4)}));g&&(d.result[d.result.length]=/^PATH/.test(d.resultType)?d.asPath(g):r);return!!g},trace:function(g,r,p){if(!1===g)return g;if(g.length){g=g.slice();var m=g.shift();if(null!==r&&Array.isArray(r)&&m.constructor===String&&m.match(/^0/)&&"0"!==m)throw Error("Property name '"+m+"' is a string with leading zeros and target is an array!");m.constructor===Number&&-1===Math.sign(m)&&(r instanceof Array||r.constructor===String)&&(m=r.length+m);if(Array.isArray(m))for(var c=0;c<m.length;c++){var n=g.slice();n.unshift(m[c]);d.trace(n,r,p)}else m.constructor===Object?Array.isArray(m.expression)?d.slice(m.expression,g,r,p):"*"===m.expression?d.walk(m.expression,g,r,p,function(q,h,b,l,k){h=b.slice();h.unshift(q);d.trace(h,l,k)}):".."===m.expression?(d.trace(g,r,p),d.walk(m,g,r,p,function(q,h,b,l,k){h=b.slice();h.unshift({expression:".."});k=k.slice();k.push(q);"object"===typeof l[q]&&d.trace(h,l[q],k)})):/^\(.*?\)$/.test(m.expression)?(n=g.slice(),n.unshift(d.eval(m.expression,r,p[p.length-1])),d.trace(n,r,p)):/^-$/.test(m.expression)?null!==r&&Array.isArray(r)&&(n=g.slice(),n.unshift(d.eval("(@.length)",r,p[p.length-1])),d.trace(n,r,p)):/^\?/.test(m.expression)&&d.walk(m.expression,g,r,p,function(q,h,b,l,k){d.eval(h.replace(/^\?/,""),l instanceof Array?l[q]:l,q)&&(h=b.slice(),h.unshift(q),d.trace(h,l,k))}):r&&r.constructor!==String&&void 0!==r[m]&&"function"!==typeof r[m]&&(p=p.slice(),p.push(Array.isArray(r)?Number(m):m),d.trace(g,r[m],p))}else d.store(p,r)},walk:function(g,r,p,m,c){if(p instanceof Array)for(var n=0,q=p.length;n<q;n++)n in p&&c(n,g,r,p,m);else if("object"===typeof p)for(n in p)p.hasOwnProperty(n)&&c(n,g,r,p,m)},slice:function(g,r,p,m){if(p instanceof Array){var c=1;g[0]=void 0!==g[0]?g[0]:null;g[1]=void 0!==g[1]?g[1]:null;g[2]=void 0!==g[2]?g[2]:null;if(0===(null===g[2]||g[2].constructor===Number?g[2]:d.eval(g[2].expression,p,m[m.length-1])))throw new RangeError("Slice step cannot be zero: ["+g.join(":")+"]");c=parseInt((null===g[2]||g[2].constructor===Number?g[2]:d.eval(g[2].expression,p,m[m.length-1]))||c);if(-1===Math.sign(c)){var n=p.length;var q=n-1;var h=-1*(n+(null===g[1]?1:0))}else n=p.length,q=0,h=n;q=parseInt((null===g[0]||g[0].constructor===Number?g[0]:d.eval(g[0].expression,p,m[m.length-1]))||(0===(null===g[0]||g[0].constructor===Number?g[0]:d.eval(g[0].expression,p,m[m.length-1]))?0:q));h=0===g[1]?0:parseInt((null===g[1]||g[1].constructor===Number?g[1]:d.eval(g[1].expression,p,m[m.length-1]))||h);q=0>q?Math.max(-1===Math.sign(c)?-1:0,q+n):Math.min(n,q);h=0>h?Math.max(-1===Math.sign(c)?-1:0,h+n):Math.min(n,h);for(g=-1===Math.sign(c)?">":"<";eval(q+g+h);q+=c)n=r.slice(),n.unshift(q),d.trace(n,p,m)}},eval:function(g,_v,_vname){r=g.slice().split("").reverse().join("").replace(/(["'])(.*?)\1(?!\\)/g,"").replace(/(\/.*?\/(?!\\)\s*~=)|(=~*\s\/.*?\/(?!\\))/g,"").replace(/\(\s*/g,"(").replace(/([;\.\+\-~!\*\/%><&\^\|:\?,])/g," ").replace(/\s+/g," ").split("").reverse().join("").split(" ").filter(function(m){return/\(/.test(m)}).filter(function(m){return/[!^]\(|[\w\d_$]\(/.test(m)}).filter(function(m){return!/test\(|exec\(|match\(/.test(m)});if(r.length)throw Error("Invocation violation: "+r);try{return eval(g.replace(/(^|[^\\])@/g,"$1_v").replace(/\\@/g,"@").replace(/(_v(?:(?!(\|\||&&)).)*)=~((?:(?!\)* *(\|\||&&)).)*)/g,function(m,c,n,q,h,b){return m?q.trim()+".test("+c.trim()+")":m}).replace(/((?:(?!\)* *(\|\||&&)).)*)\s+=~\s+(_v(?:(?!(\|\||&&)).)*)/g,function(m,c,n,q,h,b){return m?c.trim()+".test("+q.trim()+")":m}))}catch(m){throw new SyntaxError("eval: "+m.message+": "+g.replace(/(^|[^\\])@/g,"$1_v").replace(/\\@/g,"@").replace(/(_v(?:(?!(\|\||&&)).)*)=~((?:(?!\)* *(\|\||&&)).)*)/g,function(c,n,q,h,b,l){return c?h.trim()+".test("+n.trim()+")":c}).replace(/((?:(?!\)* *(\|\||&&)).)*)\s+=~\s+(_v(?:(?!(\|\||&&)).)*)/g,function(c,n,q,h,b,l){return c?h.trim()+".test("+n.trim()+")":c}));}}};if(f&&void 0!==a&&("VALUE"==d.resultType||/^PATH/.test(d.resultType)))return d.trace(d.normalize(f),a,[]),d.result.length?d.result:[]}function jscChunkPrint(a){var f=0,e=a.length,d='\n "," ", ," },{ ":" ":{'.split(" ");do{if(f+maxSize.print>e)var g=e;else{for(var r=0;r<=d.length-1;r++){var p=a.lastIndexOf(d[r],f+maxSize.print);if(-1!==p&&p>f){g=p+d[r].length-1;break}}p<f&&(g=f+maxSize.print)}print(a.slice(f,g));if(g===e)break;f="\n"===a.charAt(g)?g+1:g}while(g<e)}function renderObject(a,f,e,d){e=e||{};e.maxDepth=void 0===e.maxDepth||-1>e.maxDepth?-1:e.maxDepth;var g=e.q?"'":'"',r=e.Q?"'":'"',p=[],m="",c=function(x,A){var B="";if(x.constructor===Number)for(var z=0;z<x;z++)B+=" ";else B=x;for(z=0;z<A;z++)m+=B;return m};isNaN(d)?d=0:d++;!e.K||e.J||e.R||(e.K=!1);(e.K||e.T)&&e.i&&(m=c(e.spaceArg,d));if(null===a){var n=!0;a=e.n||f?"null":""}c=a.constructor===Number?": Number":a.constructor!==String||n?a.constructor===Array?": Array":a.constructor===Object?": Object":a.constructor===Boolean?": Boolean":": null":": String";if(a.constructor===Array)!e.J&&!e.R||e.P||!f&&""!==f?e.P||!f&&""!==f||p.push(m+f+(e.K?e.C?c:"":d===e.maxDepth?"="+JSON.stringify(a,null,0):"=[]")):p.push(m+f+(e.C?": Array":"")),(-1===e.maxDepth||d<e.maxDepth)&&a.forEach(function(x,A){p.push(renderObject(x,f||""===f?e.K?A.toString():f+(e.R?"/"+A:"["+A+"]"):null,e,d))});else if(a.constructor===Object){if(!e.J&&!e.R||e.P||!f&&""!==f?!f&&""!==f||e.P||p.push(m+f+(e.K?e.C?c:"":d===e.maxDepth?"="+JSON.stringify(a,null,0):"={}")):p.push(m+f+(e.C?": Object":"")),-1===e.maxDepth||d<e.maxDepth)for(var q in a)if(a.hasOwnProperty(q)){if(f||""===f)if(e.R)var h=(e.K?"":f+"/")+q.replace(/~/g,"~0").replace(/\//g,"~1");else if(e.d&&!e.K&&/^[A-Za-z_$][$\w\d]*$/.test(q))h=(e.K?"":f+".")+q;else{var b=q.replace(e.u?/[\u0000-\u001f\u007f-\uffff|\\|"|']/g:/[\u0000-\u001f\u007f|\\|"|']/g,function(x){switch(x){case " ":return" ";case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";case "\\":return"\\\\";case '"':return"'"===g?'"':'\\"';case "'":return"'"===g?"\\'":"'";default:return"\\u"+("0000"+x.charCodeAt(0).toString(16)).slice(-4)}});h=e.K&&!e.L?e.k?b:g+b+g:f+"["+g+b+g+"]"}p.push(renderObject(a[q],h,e,d))}}else if(e.T){if("string"===typeof a&&!n)if(e.encoding.W&&!e.A)a=encodeURI(a);else if(e.encoding.w&&!e.A)a=encodeURIComponent(a);else{var l=[],k=q="";h=n="";if(e.encoding.x){b=-2;q="0";var t="\\x",u=16}else if(e.encoding["0"])t="\\0",u=8,b=-3,q="00";else if(e.encoding.O)q="00",t="\\",u=8,b=-3;else if(e.encoding.u){t="\\u";q="0000";b=-8;b=-4;var w=u=16}else if(e.encoding.U)t="\\U",q="000000",b=-8,u=16;else if(e.encoding.E)t="\\u",q="",b=0,n="{",h="}",u=16;else if(e.encoding.o)t="0o",u=8,k=" ";else if(e.encoding.b)t="0b",u=2,q="0000000",k=" ",b=-8;else if(e.encoding.B||e.encoding["6"])t="0b",u=2,q="000000000000000",k=" ",b=-16,w=16;else if(e.encoding.h||e.encoding.H)b=-2,q="0",t="0x",u=16,k=" ";else if(e.encoding.W||e.encoding.w)b=-2,q="0",t="%",u=16;for(c=0;c<a.length;c++){var v=a.charCodeAt(c),y;e.W?y=/[\u0000-\u001f\u005c\u007f\s\b]/:y=/[\u0000-\u001f\u005c\u007f]/;128>v?/[\s|\b|\\]/.test(a[c])&&(/^\\/.test(t)||e.e)&&!e.A?/^\\/.test(t)&&"\\"==a[c]?l.push("\\\\"):e.e?l.push(a[c].replace(/[\s|\b|\\]/g,function(x){switch(x){case "\\":return"\\\\";case " ":return" ";case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";case "\v":return"\\v"}})):e.W?(v=t+n+(q+v.toString(u)).slice(b)+h,l.push(v+k)):l.push(a[c]):e.encoding.b||e.encoding.B||e.encoding["6"]||e.encoding.o||e.encoding.h||e.encoding.H||e.encoding.w||e.encoding.W||(e.encoding.U||e.encoding.E||e.encoding.O||e.encoding["0"]||e.encoding.u||e.encoding.x)&&(y.test(a[c])||e.A)?/[\s|\b]/.test(a[c])&&e.U?l.push(a[c]):(v=t+n+(q+v.toString(u)).slice(b)+h,l.push((e.encoding.B?v.slice(0,8)+"_"+v.slice(8):v)+k)):l.push(a[c]):e.encoding?16===w?(v=(q+v.toString(u)).slice(b),l.push(t+(e.encoding.B?v.slice(0,8)+"_"+v.slice(8):v)+k)):e.encoding.U||e.encoding.E?55296>v||57344<=v?l.push(t,n,(q+v.toString(16)).slice(b),h):(c++,l.push(t,n,(q+(1024*(v-55296)+a.charCodeAt(c)-56320+65536).toString(16)).slice(b),h)):2048>v?l.push(t,(192|v>>6).toString(u),k,t,(128|v&63).toString(u),k):55296>v||57344<=v?l.push(t,(224|v>>12).toString(u),k,t,(128|v>>6&63).toString(u),k,t,(128|v&63).toString(u),k):(c++,v=65536+((v&1023)<<10|a.charCodeAt(c)&1023),l.push(t,(240|v>>18).toString(u),k,t,(128|v>>12&63).toString(u),k,t,(128|v>>6&63).toString(u),k,t,(128|v&63).toString(u),k)):l.push(a[c])}a=l.join("");e.encoding.H&&(a=a.toUpperCase())}else if(a.constructor===Number)if(-1===Math.sign(a)?(b="-",a*=-1):b="",Infinity===a)a=e.I?b+"Infinity":e.n?"null":"";else if(e.encoding.b||e.encoding.B||e.encoding["6"]){a=Math.floor(a).toString(2);e.encoding.b?l=k=8:e.encoding.B?(k=16,l=8):e.encoding["6"]&&(l=k=16);t=a.length+(a.length<k?k-a.length:0!=a.length%k?k-a.length%k:0);if(e.encoding.b)a=("0000000"+a).slice(-t);else if(e.encoding.B||e.encoding["6"])a=("000000000000000"+a).slice(-t);t=0;for(u="";t<a.length;t+=l)u=u+(0===t?"":"_")+a.slice(t,t+l);a=b+"0b"+u}else e.encoding.h||e.encoding.H?a=b+"0x"+((16>a?"0":"")+(e.encoding.h?Math.floor(a).toString(16):Math.floor(a).toString(16).toUpperCase())):e.encoding.o?a=b+"0o"+Math.floor(a).toString(8):e.encoding.O&&(a=b+"0"+Math.floor(a).toString(8));p=[m+a]}else e.R||e.J?p=[m+f+(e.C?c:"")]:"string"!==typeof a||n?p=[f+"="+a]:(a=a.replace(e.u?/[\u0000-\u001f\u007f-\uffff|\\|"|']/g:/[\u0000-\u001f\u007f|\\|"|']/g,function(x){switch(x){case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";case "\\":return"\\\\";case '"':return"'"===r?'"':'\\"';case "'":return"'"===r?"\\'":"'";default:return"\\u"+("0000"+x.charCodeAt(0).toString(16)).slice(-4)}}),p=[f+"="+r+a+r]);return p.flat()}function objectifyExpressions(a,f){function e(d){d=d.split("");for(var g=!1,r=!1,p=!1,m=!1,c=!1,n=!1,q,h=!1,b=0,l=[],k=0;k<d.length;k++){c&&!/[$_A-Za-z0-9.]/.test(d[k])&&(c=!1);if(g||r)p?p=!1:'"'===d[k]&&g?g=!1:"'"===d[k]&&r?r=!1:"\\"===d[k]&&(p=!0);else if(m)p?p=!1:"["===d[k]?n=!0:"]"===d[k]?n=!1:"/"!==d[k]||n?"\\"===d[k]&&(p=!0):m=!1;else if(c)q=k;else if('"'===d[k]||"'"===d[k])'"'===d[k]?g=!0:r=!0,q=k;else if("$"===d[k]||"@"===d[k])q=k,"."===d[k+1]&&(c=!0,q=k);else if("]"===d[k])q=k,n=!1,"."===d[k+1]&&(c=!0,k++);else if("/"===d[k])m=!0;else if(("="===d[k]||"!"===d[k]||"<"===d[k]||">"===d[k]||"="===d[k])&&"="===d[k+1])q=void 0,k+=1,h=!0;else if("<"===d[k]||">"===d[k])q=void 0,h=!0;else if("="===d[k]&&"~"===d[k+1])q=void 0,h=!0,k+=1;else if("&"===d[k]&&"&"===d[k+1]||"|"===d[k]&&"|"===d[k+1]){if(1!=h&&void 0!==q&&(d.splice(q+1,0,"!==undefined"),k++),h=!1,b)for(var t=0;t<b;b--)d.splice(k,0,")"),k++}else if("!"===d[k])d.splice(k+1,0,"("),b++,k++;else if("("===d[k])l.unshift(b),b=0;else if(")"===d[k]){if(b)for(t=0;t<b;b--)d.splice(k+1,0,")"),k++;b=l.shift()}if(k==d.length-2&&(1!=h&&void 0!==q&&(d.splice(q+1,0,"!==undefined"),k++),b))for(t=0;t<b;b--)d.splice(k+1,0,")"),k++}return d.join("")}f=f||{};try{a=a.map(function(d){var g=[],r=!1,p=[];d=d.replace(/^\s*/,"").replace(/\s*$/,"");"."===d&&(f.c&&printErr("jq-style query '.' treated as JSONPath '$'"),d="$");if(""===d||"/"===d[0]){if(/~[^0-1]/g.test(d+" "))throw new SyntaxError("JSON Pointer allows ~0 and ~1 only: "+d);f.allowExpressions=!1;g=d.split("/");g.shift();g=g.map(function(z){return z.replace(/~1/g,"/").replace(/~0/g,"~")});"-"===g[g.length-1]&&(g[g.length-1]={expression:"-"})}else{"."===d[0]&&"["===d[1]?(d="$"+d.slice(1),f.c&&printErr("jq-style '.[' beginning, treated as JSONPath '$['")):"."===d[0]&&"."!==d[1]||"["===d[0]?(d="$"+d,f.c&&printErr("Query lacks root '$', trying as JSONPath...")):"$"!==d[0]&&(f.c&&printErr("Query lacks root '$', trying as keypath..."),d="$"+d.replace(/\\\./g,"\udead").split(".").map(function(z){return"["+JSON.stringify(z.replace(/\uDEAD/g,"."))+"]"}).join(""));var m=d.split("").reverse().join("");m=m.replace(/(["'])(.*?)\1(?!\\)|(\/.*?\/(?!\\)\s*~=)|=~*\s(\/.*?\/(?!\\))|(={2,3})[^=]|[^=](==?!)|[^=]((?:=!|=<|=>|~=))/g,function(z){return z.replace(/./g," ")});var c=/=/g;p=[];var n=0,q=[];do{q=c.exec(m);if(null===q||0===c.lastIndex||n===c.lastIndex)break;n=c.lastIndex;p.unshift(n)}while(0!==c.lastIndex&&c.lastIndex!==m.length);if(f.disallowData&&p.length)throw new SyntaxError("Data assignment (=) not allowed in path specification");if(1<p.length)throw new SyntaxError("Multiple assignment operators detected: "+d);if(0<d.length-n)m=d.substring(0,d.length-n).split("").reverse().join("");else throw Error("Error parsing: "+d);q=0;c=/([\w\d$]*[A-Za-z_$])(\.{1,2})|(\*?)(\.{1,2})|(\])|(\$)/g;do{var h=c.exec(m);if(null===h)break;if(q+h[0].length!==c.lastIndex||""===h[0])throw new SyntaxError("Malformed path expression: "+d);if(h[1]||h[3]){if(r)throw new SyntaxError("Additional operators (./..) disallowed after recursive descent: "+d);h=h.filter(function(z){return null!=z});if("*"===h[1]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);g.unshift({expression:"*"})}else h[1]&&g.unshift(h[1].split("").reverse().join(""));if(".."===h[2]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);g.unshift({expression:".."})}else if(""===h[1]){c.lastIndex=q;break}}else if(h[4]){if("."===h[4])break;else if(!g.length){r=!0;break}else if(".."===g[0].expression)throw new SyntaxError("Additional operators (./..) disallowed after recursive descent: "+d);g.unshift({expression:".."})}else if(h[5]){r=!1;q=/\s*(["'])(.*?)\1(?!\\)|(\*(?!:\*))|(\d+\-?)|(-)|(,)|(:)|(\))|(\[)|\s/g;h=[];var b=[],l=c.lastIndex,k=[],t=!1,u=!1,w=!1;q.lastIndex=c.lastIndex;do{b=q.exec(m);if(null===b||l===q.lastIndex||l+b[0].length!==q.lastIndex)throw new SyntaxError("Malformed path expression : "+d);b=b.map(function(z){return z?z.split("").reverse().join(""):z});if(""===b[2])h.unshift(b[2]);else if(b[2]){if(u){q.lastIndex=l;break}else u=!0;if(t)break;k.unshift(JSON.parse('"'+("'"===b[1]?b[2].replace(/\\'/g,"'").replace(/"/g,'\\"'):b[2])+'"',null,0))}else if(b[3]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);if(u){q.lastIndex=l;break}else u=!0;if(t)break;else k.unshift({expression:"*"})}else if(b[4]){if(u&&!w){q.lastIndex=l;break}else u=!0;w&&t&&(t=!1);if("0"!==b[4]&&("0"===b[4][0]||"-"===b[4][0]&&"0"===b[4][1]))throw Error("Octal indices are disallowed: "+b[4]);k.unshift(Number(b[4]))}else if(b[5]){if(u){q.lastIndex=l;break}else u=!0;k.unshift({expression:"-"})}else if(b[6]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);k.length&&!w?h.unshift(k[0]):k.length&&(w&&t&&k.unshift(null),h.unshift({expression:k}));k=[];u=!1;w&&(w=t=!1)}else if(b[7]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);w=!0;if(1===k.length&&null!==k[0]&&(k[0].constructor===String||k[0].constructor!==Number&&"("!==k[0].expression[0]))break;k.length&&!t||k.unshift(null);t||(t=!0)}else if(b[8]){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);l=0;var v=1,y=[];b=b[8];var x=/(["'])(.*?)\1(?!\\)|(\()|(\))|(\/.*?\/(?!\\)\s*~=)|(~=\s*\/.*?\/(?!\\))|(==?((?:=|!)))|(.)/g;if(w)t=!1;else if(u)break;x.lastIndex=q.lastIndex;do{y=x.exec(m);if(y[1])b+=y[0].replace(/@/g,"@\\");else if(y[3])b+=y[3],l+=1;else if(y[4])b+=y[4],v+=1;else if(y[5]||y[6])b+=y[0].replace(/@/g,"@\\");else if(y[7])b+="=="+y[8];else if(y[9]){if("="===y[9]&&!/[<>!]/.test(m[x.lastIndex]))break;b+=y[9]}if(v===l){u=!0;if("?"===m[x.lastIndex]){if(w){x.lastIndex=0;break}b+="?";x.lastIndex+=1}q.lastIndex=x.lastIndex;y=e(b.split("").reverse().join(""));k.unshift({expression:y});break}}while(0!==x.lastIndex&&x.lastIndex!==m.length);if(v!==l)break}else if(b[9]){1!==q.lastIndex-c.lastIndex&&(c.lastIndex=q.lastIndex);break}l=q.lastIndex}while(0!==q.lastIndex&&q.lastIndex!==m.length);1!==k.length||w?k.length&&(w&&t&&k.unshift(null),void 0===k[2]&&(k[2]=null),h.unshift({expression:k})):h.unshift(k[0]);if(1<h.length){if(!f.allowExpressions)throw new SyntaxError("JSONPath expressions disallowed: "+d);g.unshift(h)}else g.unshift(h[0])}else if(h[6])if(c.lastIndex===m.length)var A=!0;else break;q=c.lastIndex}while(0!==c.lastIndex&&c.lastIndex!==m.length);if(!A||r||c.lastIndex!==m.length&&!n)throw new SyntaxError("Malformed path expression: "+d);}if(1===p.length){if("="===d.charAt(d.length-n-1))return"";d=d.substring(d.length-n+1,d.length);d.match(/^'(.*)'$/)&&(d='"'+d.substring(1,d.length-1).replace(/\\"/g,'"').replace(/\\'/g,"'").replace(/"/g,'\\"')+'"');try{var B=JSON.parse(d)}catch(z){throw new SyntaxError(z+": "+d);}}if(g.length&&g[g.length-1].constructor===Array&&f.expandTrailingUnion)for(d=[],g=g.slice(),r=g.pop(),p=0;p<r.length;p++)n=r[p],A=g.slice(),A.push(n),d.push({path:A,data:B});else d={path:g,data:B};return d})}catch(d){throw Error(d);}return a.filter(function(d){return d}).flat()}function sortObject(a){if(Array.isArray(a))var f=[];else if("object"===typeof a&&null!==a)f={};else return a;return Object.keys(a).sort().reduce(function(e,d){e[d]="object"===typeof a[d]?sortObject(a[d]):a[d];return e},f)}function flatten(){for(var a=[],f=0;f<arguments.length;f++)arguments[f]instanceof Array?a.push.apply(a,flatten.apply(this,arguments[f])):a.push(arguments[f]);return a}Array.prototype.flat||Object.defineProperty(Array.prototype,"flat",{configurable:!0,value:function flat(a){var e=isNaN(a)?1:Number(a);return e?Array.prototype.reduce.call(this,function(d,g){Array.isArray(g)?d.push.apply(d,flat.call(g,e-1)):d.push(g);return d},[]):Array.prototype.slice.call(this)},writable:!0});Object.defineProperty(Array.prototype,"sortVarWidth",{configurable:!0,value:function(){var a=this,f=Array.prototype.map.call(this,function(d){return d.length}).filter(function(d,g,r){return g==r.indexOf(d)}).sort(function(d,g){return d-g}),e=[];Array.prototype.forEach.call(f,function(d){var g=Array.prototype.filter.call(a,function(r){return r.length==d});e.push(g.sort())});return e.flat()},writable:!0});RegExp.quote=function(a){return a.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")};Math.sign||(Math.sign=function(a){return(0<a)-(0>a)||+a});(function(a,f){"object"===typeof exports?f(module.exports):"function"===typeof define&&define.amd?define(["exports"],f):(a.jsonpatch={},a.returnExports=f(a.jsonpatch))})(this,function(a){function f(h){Error.call(this,h);this.message=h}function e(h){Error.call(this,h);this.message=h}function d(h){var b;if(n(h))return h.slice();if(null===h)return h;if("object"===typeof h){var l={};for(b in h)Object.hasOwnProperty.call(h,b)&&(l[b]=h[b]);return l}return h}function g(h,b){var l;if(h===b)return!0;if(typeof h!==typeof b)return!1;if("object"===typeof h){var k=n(h),t=n(b);if(k!==t)return!1;if(k){if(h.length!=b.length)return!1;for(l=0;l<h.length;l++)if(!g(h[l],b[l]))return!1;return!0}if(Object.keys(h).length!==Object.keys(b).length)return!1;for(l in h)if(!b.hasOwnProperty(l)||!g(h[l],b[l]))return!1;return!0}return!1}function r(h){var b;if(!h.op)throw new f("Operation missing");if(!q.hasOwnProperty(h.op))throw new f("Invalid JSON Patch operation");if(!("path"in h))throw new f("Path missing");var l=q[h.op];for(b=0;b<l.length;b++)if(void 0===h[l[b]])throw new f(h.op+" must have key "+l[b]);}function p(h,b){r(h);var l=h.op,k=new c(h.path),t=h.value,u=void 0!==h.from?new c(h.from):null;switch(l){case "add":return function(w){return k.add(w,t,b)};case "remove":return function(w){return k.remove(w,b)};case "replace":return function(w){return k.replace(w,t,b)};case "move":if(k.subsetOf(u))throw new f("destination must not be a child of source");return function(w){var v=u.get(w);w=u.remove(w,b);return k.add(w,v,b)};case "copy":return function(w){var v=u.get(w);return k.add(w,v,b)};case "test":return function(w){if(!g(k.get(w),t))throw new e("Test operation failed. Values did not match.");return w}}}var m,c;var n=Array.isArray||function(h){return"[object Array]"==Object.prototype.toString.call(h)};a.apply_patch=function(h,b){return(new m(b)).apply(h)};a.InvalidPatch=f;f.prototype=Error();a.PatchApplyError=e;e.prototype=Error();a.JSONPointer=c=function(h){var b=[];var l=h.split("/");if(""!==l[0])throw new f("JSONPointer must start with a slash (or be an empty string)!");for(h=1;h<l.length;h++)b[h-1]=l[h].replace(/~1/g,"/").replace(/~0/g,"~");this.path=b;this.length=b.length};c.prototype._get_segment=function(h,b){h=this.path[h];if(n(b))if("-"===h)h=b.length;else{if(!h.match(/^0$|^[1-9][0-9]*$/))throw new RangeError("Invalid array index: "+h);h=parseInt(h,10)}return h};c.prototype._action=function(h,b,l){function k(u,w){l||(u=d(u));var v=t._get_segment(w,u);if(w==t.path.length-1)u=b(u,v);else{if(n(u)){if(u.length<=v)throw new e("Path not found in document");}else if("object"===typeof u){if(!Object.hasOwnProperty.call(u,v))throw new e("Path not found in document");}else throw new e("Path not found in document");w=k(u[v],w+1);l||(u[v]=w)}return u}var t=this;return k(h,0)};c.prototype.add=function(h,b,l){return 0===this.length?b:this._action(h,function(k,t){if(null===k)throw Error("Unable to add to null!");if(n(k)){if(t>k.length)throw new RangeError("Array index '"+t+"' does not exist. Use '-' to add to the end.");k.splice(t,0,b)}else k[t]=b;return k},l)};c.prototype.remove=function(h,b){return 0===this.length?[]:this._action(h,function(l,k){if(!Object.hasOwnProperty.call(l,k))throw new e("Remove operation must point to an existing value!");n(l)?l.splice(k,1):delete l[k];return l},b)};c.prototype.replace=function(h,b,l){return 0===this.length?b:this._action(h,function(k,t){if(null===k)throw Error("Unable to replace to null!");if(!Object.hasOwnProperty.call(k,t))throw new RangeError("Replace requires an existing location. Property '"+t+"' not found.");n(k)?k.splice(t,1,b):k[t]=b;return k},l)};c.prototype.get=function(h){var b;if(0===this.length)return h;this._action(h,function(l,k){if(!Object.hasOwnProperty.call(l,k))throw new e("Path not found in document");b=l[k];return l},!0);return b};c.prototype.subsetOf=function(h){if(this.length<=h.length)return!1;for(var b=0;b<h.length;b++)if(h.path[b]!==this.path[b])return!1;return!0};var q={add:["value"],replace:["value"],test:["value"],remove:[],move:["from"],copy:["from"]};a.JSONPatch=m=function(h,b){this._compile(h,b)};m.prototype._compile=function(h,b){var l;this.compiledOps=[];"string"===typeof h&&(h=JSON.parse(h));if(!n(h))throw new f("Patch must be an array of operations");for(l=0;l<h.length;l++){var k=p(h[l],b);this.compiledOps.push(k)}};a.JSONPatch.prototype.apply=function(h){var b;for(b=0;b<this.compiledOps.length;b++)h=this.compiledOps[b](h);return h}});function isObject(a){var f=typeof a;return null!=a&&("object"===f||"function"==f)}function diff(a,f){if(a!=f){if(null==a||null==f||"object"!==typeof f||"object"!==typeof a)return null!=f?f:null;if(!Array.isArray(a)&&Array.isArray(f))return f;if(Array.isArray(a)&&!Array.isArray(f))return f=JSON.parse(JSON.stringify(f)),f.length=null,f;var e=void 0,d;for(d in a)if(a.hasOwnProperty(d))if(f.hasOwnProperty(d)){var g=diff(a[d],f[d]);void 0!==g&&(null==e&&(e={}),e[d]=g)}else null==e&&(e={}),e[d]=null;for(d in f)f.hasOwnProperty(d)&&!a.hasOwnProperty(d)&&(null==e&&(e={}),e[d]=f[d]);if(Array.isArray(a)&&Array.isArray(f)&&f.length<a.length)for(f=e.length=f.length;f<a.length;f++)delete e[f];return e}}function merge(a,f,e,d){Array.isArray(a)&&null!=f&&null===f.length&&(a={},delete f.length);if(null==f||null!=f&&f.constructor!==Object)return Array.isArray(f)?JSON.parse(JSON.stringify(f)):f;isObject(a)||(a={});var g=!1,r;for(r in f){var p=f[r];e&&null==p?(g=!0,delete a[r]):void 0===a[r]&&d&&1==d.existingOnly||void 0!==a[r]&&d&&1==d.nonexistingOnly||(a[r]=merge(a[r],p,e,d))}if(g&&Array.isArray(a))for(f=a.length;0<f;f--)null==a[f-1]&&(a.length=f-1);return a}function ingestLiterals(a,f,e){a=a.split("\n").filter(function(n){return null!=n&&""!=n});try{var d=objectifyExpressions(a)}catch(n){throw Error(n);}for(a=0;a<d.length;a++){var g=d[a],r=g.path;g=g.data;var p=e;if(r.length){r[0].constructor!==String||void 0!==e&&null!==e&&e.constructor===Object?r[0].constructor!==Number||void 0!==e&&null!==e&&e.constructor===Array||(void 0!==e&&f.G?printErr("Guarding $["+r[0]+"] from changing object to array, line: "+(a+1)):p=e=[]):void 0!==e&&f.G?printErr("Guarding $["+r[0]+"] from changing array to object, line: "+(a+1)):"-"!==r[0]&&(p=e={});for(var m=0;m<=r.length-1;m++){var c=p.constructor!==Array||"-"!==r[m].expression&&"-"!==r[m]?r[m]:p.length;if(void 0===g&&!f.g||void 0===c)break;m===r.length-1?void 0!==p[c]&&f.G?printErr("Guarding against re-assignment of '"+c+"' to: "+JSON.stringify(g)):void 0!==g?p[c]=g:f.g&&(p[c]=null):(p.hasOwnProperty(c)?r[m+1].constructor!==String||void 0!==p[c]&&null!==p[c]&&p[c].constructor===Object?r[m+1].constructor!==Number||void 0!==p[c]&&null!==p[c]&&p[c].constructor===Array||(p[c]=[]):p[c]={}:r[m+1].constructor===String?p[c]={}:r[m+1].constructor===Number&&(p[c]=[]),p=p[c])}}else void 0!==e&&f.G?printErr("Guarding $ from root overwrite, line: "+(a+1)):void 0!==g?e=g:f.g&&(e=null)}return void 0!==e?JSON.parse(JSON.stringify(e)):[]}function alterObject(a,f,e,d,g,r,p){if(!g.x&&!g.X){var m,c=[];void 0!==Object.keys(g.opArg)[0]&&(m=Object.keys(g.opArg)[0]);if(void 0!==f){if(g.V)try{f=readFile(f)}catch(l){throw Error(l);}g.s&&(f='"'+f.replace(/[\u0000-\u001f\u007f|"|\\]/g,function(l){switch(l){case '"':return'\\"';case "\\":return"\\\\";case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";default:return"\\u"+("0000"+l.charCodeAt(0).toString(16)).slice(-4)}})+'"');try{f=JSON.parse(f)}catch(l){g.c&&g.H&&printErr("Truncation help will be attmepted on value input (-v/-V)");var n=rehabJSON(f);if(!n.length||1<n.length)throw Error("Multiple JSON texts are not allowed in as a value");try{f=JSON.parse(n[0])}catch(k){throw printErr("Error in supplied JSON value (-v/-V): "+n[0].substring(0,24).replace(/[\n|\r]/g,"")+"\u2026"),Error(l);}}}if(void 0!==e)if("$"===e)var q="";else if("$"===e[0]){try{q=jsonPath(a,objectifyExpressions([e],null)[0].path,{resultType:"PATH_JSONPOINTER"})}catch(l){throw Error(l);}if(q.length){if(1<q.length)throw new RangeError('Error: "From" path returned multiple results: '+e+"\n"+q.join("\n"));q=q[0]}else throw Error("Unable to resolve from path: "+e);}else q=e;if(void 0!==d)if("$"===d)c=[""];else if("$"===d[0]){try{c=objectifyExpressions([d],{expandTrailingUnion:!0,allowExpressions:!0})}catch(l){throw Error(l);}c=c.map(function(l){try{var k=jsonPath(a,l.path,{resultType:"PATH_JSONPOINTER"})}catch(u){throw Error(u);}if(k.length)return k;if(g.opArg.remove||g.opArg.replace||g.opArg.test)return g.G?"/"+l.path.map(function(u){return u.toString().replace(/~/g,"~0").replace(/\//g,"~1")}).join("/"):"";k=l.path.slice();var t=k.pop();if(k.length||"-"!==t.expression)if(k.length){l=jsonPath(a,k,{resultType:"PATH_OBJECT"});if(!l.length)return"";l=l.map(function(u){u.path.push("-"===t.expression?"-":t);return null===t||t.constructor!==String&&t.constructor!==Array&&"-"!==t.expression?"":"/"+u.path.map(function(w){return w.toString().replace(/~/g,"~0").replace(/\//g,"~1")}).join("/")})}else l="/"+l.path.map(function(u){return u.toString().replace(/~/g,"~0").replace(/\//g,"~1")}).join("/");else l="/-";return l}).flat().sortVarWidth().reverse().filter(function(l){return null!=l&&""!=l}).filter(function(l,k,t){return!k||l!=t[k-1]});if(1<c.length&&g.opArg.move)throw Error("Move operation cannot have multiple destinations: "+d+"\n"+c.join("\n"));}else if(""===d||"/"===d[0])c=[d];else throw SyntaxError("Unrecognized query syntax: "+d);}if(g.opArg.mergepatch||g.opArg.merge||g.opArg.merge0||g.opArg.merge1){if(void 0!==f&&void 0!==q)throw Error("Merge source ambiguous. Specify a value (-v/-V) or a path (-p), or neither.");if(void 0===f&&void 0===q)throw new SyntaxError("Merge source not given, specify a path (-p) or a JSON value (-v/-V).");if(q){try{var h=jsonPath(a,objectifyExpressions([q])[0].path,null)[0]}catch(l){throw Error(l);}f=h;if(void 0===f)throw Error("From path does not exist: "+q);}else""===q&&(f=jsonPath(a,[],null)[0]);c.length?c.forEach(function(l){try{var k=jsonPath(a,objectifyExpressions([l])[0].path,null)[0]}catch(t){throw Error(t);}k=merge(k,f,g.opArg.mergepatch?!0:!1,g.opArg.merge1?{existingOnly:!0}:g.opArg.merge0?{nonexistingOnly:!0}:null);try{a=jsonpatch.apply_patch(a,[{op:"replace",path:l,value:k}])}catch(t){throw Error(t);}}):a=merge(a,f,g.opArg.mergepatch?!0:!1,g.opArg.merge1?{existingOnly:!0}:g.opArg.merge0?{nonexistingOnly:!0}:null)}else if(g.opArg.diff)if(void 0!==f)a=diff(a,f,!0);else throw new SyntaxError("No value specified!");else{if(g.x||g.X){m=g.X?readFile(p):p;try{var b=JSON.parse(m)}catch(l){g.c&&g.H&&printErr("Truncation help will be attmepted on JSON Patch input");n=rehabJSON(m);if(1<n.length)throw Error("Multiple JSON texts are not allowed for JSON Patch");if(!n.length)throw Error("No JSON supplied for JSON Patch!");try{b=JSON.parse(n[0])}catch(k){throw printErr("Error in supplied JSON Patch input: "+n[0].substring(0,24).replace(/[\n|\r]/g,"")+"\u2026"),Error(l);}}}else if(c.length)for(b=[{}],e=0;e<c.length;e++)b[e]={op:m,path:c[e],from:q,value:f};else throw Error("JSON Patch operation with no path provided!");try{a=jsonpatch.apply_patch(a,b)}catch(l){throw Error("JSON Text ("+r+") "+l);}}return a}function rehabJSON(a){a=a.split("");for(var f=!1,e=!1,d=!1,g=!1,r=!1,p=!1,m=0,c=[],n=!1,q=[],h,b=0,l=a.length;b<l;b++){if(f||e)if(d)if(d=!1,"0"===a[b]&&!/\d/.test(a[b+1]))option.c&&printErr("Byte "+(b+1)+": null notation \\0 (JSON5)"),a[b]="u0000";else if("v"===a[b])option.c&&printErr("Byte "+(b+1)+": vertical tab \\v (JSON5)"),a[b]="u000b";else if("x"===a[b]&&/\d|[A-Fa-f]/.test(a[b+1])&&/\d|[A-Fa-f]/.test(a[b+2]))option.c&&printErr("Byte "+(b+1)+": hex notation \\x (JSON5)"),a[b]="u00",b+=2;else if("\r"===a[b]&&"\n"===a[b+1])option.c&&printErr("Byte "+(b+1)+": \\ escaped newlines (\\r\\n) (JSON5)"),a[b]="",a[b+1]="",b+=1;else{if("\n"===a[b]||"\r"===a[b]||"\u2028"===a[b]||"\u2029"===a[b])option.c&&printErr("Byte "+(b+1)+": \\ escaped newline in string (JSON5)"),a[b]=""}else if('"'===a[b]&&f||"'"===a[b]&&e)e?(e=!1,a[b]='"'):f=!1,c.length?h=b:n=!0;else if('"'===a[b]&&e)a[b]='\\"';else if("\\"===a[b])d=!0,h=b,"\n"===a[b+1]||"\r"===a[b+1]&&"\n"===a[b+2]?a[b]="":"'"===a[b+1]&&(a[b]="");else if("\t"===a[b])option.c&&printErr("Byte "+(b+1)+": literal tab character in string"),a[b]="";else{if("\n"===a[b])if(option.c&&printErr("Byte "+(b+1)+": literal newline in quotes"),option.w)option.c&&printErr("Ignoring newline (-w)"),a[b]="";else{if(option.H)if(option.c&&printErr("Truncation help for JSON Text ("+(q.length+1)+"), bytes: "+(m+1)+"-"+(b+1)),a[b]="",f=e=!1,c.length){for(n=0;n<c.length;n++)"Object"===c[n].type?"NEEDS_NAMESEP"===c[n].state?(option.c&&(0===n?printErr("Truncation help after byte "+b+', open string, missing separator, value, object end: ":null}'):printErr("Truncation help after byte "+b+", missing separator, value, object end: :null}")),a[b]+=(0===n?'"':"")+":null}"):"NEEDS_ENDER"===c[n].state&&(option.c&&(0===n?printErr("Truncation help after byte "+b+', open string and object end: "}'):printErr("Truncation help after byte "+b+", object end: }")),a[b]+=(0===n?'"':"")+"}"):"Array"===c[n].type&&"NEEDS_ENDER"===c[n].state&&(option.c&&(0===n?printErr("Truncation help after byte "+b+', open string and array end: "]'):printErr("Truncation help after byte "+b+", array end: ]")),a[b]+=(0===n?'"':"")+"]");c=[]}else option.c&&printErr("Truncation help after byte "+b+", open string"),a[b]+='"';n=!0}}else if(p){if("\n"===a[b]||"\r"===a[b]||"\u2028"===a[b]||"\u2029"===a[b])p=!1;a[b]=""}else if(g)"*"===a[b]&&"/"===a[b+1]?(a[b]="",a[b+1]="",b+=1,g=!1):a[b]="";else if(r)"-"===a[b]&&"-"===a[b+1]&&">"===a[b+2]?(a[b]="",a[b+1]="",a[b+2]="",b+=2,r=!1):a[b]="";else if(/[\s\ufefe]/.test(a[b])){option.c&&!/[ \n\r\t]/g.test(a[b])&&option.c&&printErr("Byte "+(b+1)+": additional whitespace character +("+JSON.stringify(a[b],null,0)+") (JSON5)");/[\f\r\v\u2028\u2029]/g.test(a[b])?"\r"===a[b]&&"\n"===a[b+1]?b+=1:a[b]="\n":/[^ \n]/g.test(a[b])&&(a[b]=" ");if(void 0===h){m=b+1;continue}if(!c.length&&void 0!==h||b===l-1)n=!0}else if('"'===a[b]||"'"===a[b])'"'===a[b]?f=!0:(e=!0,a[b]='"',option.c&&printErr("Byte "+(b+1)+": single quoted string (JSON5)")),c.length&&(c.length&&"Object"===c[0].type?"OBJECT_BEGIN"===c[0].state||"NEEDS_PROPNAME"===c[0].state?c[0].state="NEEDS_NAMESEP":"NEEDS_VALUE"===c[0].state&&(c[0].state="NEEDS_ENDER"):!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER")),h=b;else if(":"===a[b])c.length&&"Object"===c[0].type&&"NEEDS_NAMESEP"===c[0].state&&(c[0].state="NEEDS_VALUE"),h=b;else if("{"===a[b])option.D&&c.length&&("\n"===a[b-1]||"NEEDS_VALUE"!==c[0].state&&"ARRAY_BEGIN"!==c[0].state)?(--b,option.c&&printErr("Byte "+(b+1)+": Truncation Detected"),n=!0):(c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"),c.unshift({type:"Object",state:"OBJECT_BEGIN"}),h=b);else if("["===a[b])option.D&&c.length&&("\n"===a[b-1]||"NEEDS_VALUE"!==c[0].state&&"ARRAY_BEGIN"!==c[0].state)?(--b,option.c&&printErr("Byte "+(b+1)+": Truncation Detected"),n=!0):(c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"),c.unshift({type:"Array",state:"ARRAY_BEGIN"}),h=b);else if("}"===a[b])","===a[h]&&(option.c&&printErr("Byte "+(h-1)+": trailing comma (JSON5)"),a[h]=""),c.shift(),c.length?h=b:n=!0;else if("]"===a[b])","===a[h]&&(option.c&&printErr("Byte "+(h-1)+": trailing comma (JSON5)"),a[h]=""),c.shift(),c.length?h=b:n=!0;else if(","===a[b])h=b,c.length&&"Object"===c[0].type&&"NEEDS_ENDER"===c[0].state?c[0].state="NEEDS_PROPNAME":c.length&&"Array"===c[0].type&&"NEEDS_ENDER"===c[0].state&&(c[0].state="NEEDS_VALUE");else if("n"===a[b]&&"u"===a[b+1]&&"l"===a[b+2]&&"l"===a[b+3]||"t"===a[b]&&"r"===a[b+1]&&"u"===a[b+2]&&"e"===a[b+3]||"f"===a[b]&&"a"===a[b+1]&&"l"===a[b+2]&&"s"===a[b+3]||"e"===a[b+4]){c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER");var k=a.slice(b,b+5).join("");if("true"===k.slice(b,b+4)||"true"===k.slice(b,b+4))h=b+4;"false"===k.slice(b,b+5)&&(h=b+5)}else if("+"===a[b]&&(/\d/.test(a[b+1])||"."===a[b+1]))option.c&&printErr("Byte "+(b+1)+": explicit plus + for value (JSON5)"),c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"),a[b]="";else if("."===a[b]&&!/\d/.test(a[b-1]))option.c&&printErr("Byte "+(b+1)+": decimal point wihtout preceding digit (JSON5)"),c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"),a[b]="0.",h=b;else if("."===a[b]&&!/\d/.test(a[b+1]))option.c&&printErr("Byte "+(b+1)+": trailing decimal lacking mantissa (JSON5)"),a[b]="";else if("N"===a[b]&&"a"===a[b+1]&&"N"===a[b+2]&&(!c.length||"Object"===c[0].type&&"{"!==a[h]&&","!==a[h]||"Array"===c[0].type))option.c&&printErr("Byte "+(b+1)+": NaN for value (JSON5)"),option["8"]?(a[b]='"',a[b+1]="NaN",a[b+2]='"'):(a[b]="",a[b+1]="",a[b+2]="null"),h=b+=2;else if("-"!==a[b]&&"+"!==a[b]||"I"!==a[b+1]||"n"!==a[b+2]||"f"!==a[b+3]||"i"!==a[b+4]||"n"!==a[b+5]||"i"!==a[b+6]||"t"!==a[b+7]||"y"!==a[b+8])if("I"===a[b]&&"n"===a[b+1]&&"f"===a[b+2]&&"i"===a[b+3]&&"n"===a[b+4]&&"i"===a[b+5]&&"t"===a[b+6]&&"y"===a[b+7])option.c&&printErr("Byte "+(b+1)+": Infinity as value (JSON5)"),a[b]="",a[b+1]="",a[b+2]="",a[b+3]="",a[b+4]="",option.I?(a[b+5]='"',a[b+6]="Infinity",a[b+7]='"'):(a[b+5]="",a[b+6]="",a[b+7]="null"),b+=4;else if("0"!==a[b]||"x"!==a[b+1]||c.length&&"Array"!==c[0].type&&("Object"!==c[0].type||":"!==a[h]))if("-"===a[b]||/\d/.test(a[b]))c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"),/\d/.test(a[b])&&(h=b);else if(/[$_A-Za-z]/.test(a[b])&&c.length&&"Object"===c[0].type&&("{"===a[h]||","===a[h])){option.c&&printErr("Byte "+(b+1)+": unquoted object key name (JSON5)");a[b]='"'+a[b];for(b+=1;b<a.length;b++)if(/[^$_A-Za-z0-9]/.test(a[b])){--b;break}a[b]+='"';h=b;c.length&&(c.length&&"Object"===c[0].type?"OBJECT_BEGIN"===c[0].state||"NEEDS_PROPNAME"===c[0].state?c[0].state="NEEDS_NAMESEP":"NEEDS_VALUE"===c[0].state&&(c[0].state="NEEDS_ENDER"):!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER"))}else"/"===a[b]&&"*"===a[b+1]?(option.c&&printErr("Byte "+(b+1)+": /* block comment (JSON5)"),a[b]="",g=!0):"/"===a[b]&&"/"===a[b+1]?(option.c&&printErr("Byte "+(b+1)+": // line comment (JSON5)"),a[b]="",p=!0):"-"===a[b]&&"-"===a[b+1]?(option.c&&printErr("Byte "+(b+1)+": -- line comment"),a[b]="",p=!0):"<"===a[b]&&"!"===a[b+1]&&"-"===a[b+2]&&"-"===a[b+3]?(option.c&&printErr("Byte "+(b+1)+": \x3c!-- block comment"),a[b]="",r=!0):"*"===a[b]&&"*"===a[b+1]&&"*"===a[b+2]?(option.c&&printErr("Byte "+(b+1)+": *** line comment"),a[b]="",p=!0):"#"===a[b]?(option.c&&printErr("Byte "+(b+1)+": # line comment"),a[b]="",p=!0):";"===a[b]?(option.c&&printErr("Byte "+(b+1)+": ; line comment"),a[b]="",p=!0):h=b;else{k="-"===a[b-1]?b-1:b;option.c&&printErr("Byte "+(k-1)+": 0x hex value (JSON5)");for(b+=2;b<l;b++)if(!/[0-9A-Fa-f]/.test(a[b])||/\s/.test(a[b])||","===a[b]||"]"===a[b]||"}"===a[b]||" "===a[b]||"\t"===a[b]||"\r"===a[b]||"\n"===a[b]||":"===a[b]||"\ufefe"===a[b]){--b;break}h=b;var t=a.slice(k,h+1).join("");t=eval(t);for(a[h]=t;k<h;k++)a[k]="";c.length&&"Object"===c[0].type&&"NEEDS_VALUE"===c[0].state?c[0].state="NEEDS_ENDER":!c.length||"Array"!==c[0].type||"ARRAY_BEGIN"!==c[0].state&&"NEEDS_VALUE"!==c[0].state||(c[0].state="NEEDS_ENDER");h=b}else if(!c.length||"Object"===c[0].type&&"{"!==a[h]&&","!==a[h]||"Array"===c[0].type)option.c&&printErr("Byte "+(b+1)+": "+a[b]+"Infinity as value (JSON5)"),option.I?(a[b+6]='"',a[b+7]=a[b]+"Infinity",a[b+8]='"'):(a[b+6]="",a[b+7]="",a[b+8]="null"),a[b]="",a[b+1]="",a[b+2]="",a[b+3]="",a[b+4]="",a[b+5]="",b+=5;if(n){f="";if(c.length&&option.H)for(option.c&&printErr("Truncation help for JSON Text ("+(q.length+1)+"), bytes: "+(m+1)+"-"+(b+1)),n=0;n<c.length;n++)"Object"===c[n].type?"NEEDS_ENDER"===c[n].state||"OBJECT_BEGIN"===c[n].state?(option.c&&printErr("Truncation help after byte "+(b+1)+", object end: }"),f+="}"):"NEEDS_PROPNAME"===c[n].state?(option.c&&printErr("Truncation help after byte "+(b+1)+', open string, missing value and object end: "":null}'),f+='"":null}'):"NEEDS_VALUE"===c[n].state?(option.c&&printErr("Truncation help after byte "+(b+1)+", missing value and object end: null}"),f+="null}"):"NEEDS_NAMESEP"===c[n].state&&(option.c&&printErr("Truncation help after byte "+(b+1)+", missing separator,value, and object end: :null}"),f+=":null}"):"Array"===c[n].type&&("NEEDS_ENDER"===c[n].state||"ARRAY_BEGIN"===c[n].state?(option.c&&printErr("Truncation help after byte "+(b+1)+", array end: ]"),f+="]"):"NEEDS_VALUE"===c[n].state&&(option.c&&printErr("Truncation help after byte "+(b+1)+", missing value and array end: null]"),f+="null]"));q[q.length]=a.slice(m,b+1).join("")+f;if(option.c&&1===q.length)var u=m,w=b;option.c&&1<q.length&&(2===q.length&&printErr("Bytes "+(u+1)+"-"+(w+1)+": JSON Text (1)"),printErr("Bytes "+(m+1)+"-"+(b+1)+": JSON Text ("+q.length+")"));m=b+1;h=void 0;c=[];newLineCount=0;p=r=g=d=f=e=n=!1}}return q}"undefined"===typeof printErr&&eval("function printErr(string) { debug(string) }");for(var option={},maxSize={print:715827880,file:2147483647},query=decodeURIComponent(escape(arguments[0]))||"$",fileArg=decodeURIComponent(escape(arguments[1]))||"/dev/stdin",optionsArg=arguments[2]||"",i=0;i<optionsArg.length;i++)switch(optionsArg.charAt(i)){case "Q":option.Q=!0;option.q=!0;break;default:option[optionsArg.charAt(i)]=!0}var spaceArgString=decodeURIComponent(escape(arguments[3]))||"2",spaceArg=/^\s*$/.test(spaceArgString)||isNaN(spaceArgString)?spaceArgString:Number(spaceArgString);option.spaceArg=spaceArg;var valueArg=option.v||option.V?decodeURIComponent(escape(arguments[4])):void 0;if(option.p)var pathArg=decodeURIComponent(escape(arguments[5]));option.maxDepth=""===arguments[6]||isNaN(Number(arguments[6]))?-1:Number(arguments[6]);arguments[7][0]?(option.encoding={},option.encoding[decodeURIComponent(escape(arguments[7][0]))]=!0):option.encoding="";option.opArg={};option.o&&(option.opArg[decodeURIComponent(escape(arguments[8]))]=!0);if(option.f)var fromArg=decodeURIComponent(escape(arguments[9]));var JSONPatchArg=decodeURIComponent(escape(arguments[10]))||"",multiJSONArg=decodeURIComponent(escape(arguments[11]))||"";option.k&&(option.K=!0);option.K&&(option.i=!0);if("function"===typeof readFile)try{var fileText=readFile(fileArg)}catch(a){printErr(a+" ("+fileArg+")"),quit()}else for(option.V&&(printErr('-V not available for this version of jsc\nUse -v "$(< file)" as a workaround'),quit()),fileText="";line=decodeURIComponent(escape(this.readline()));)fileText+=line+"\n";var JSONObjectArray=[];if(option.S){"/dev/stdin"===fileArg&&(fileText=fileText.slice(0,-1));fileText='"'+fileText.replace(/[\u0000-\u001f\u007f-\uffff|"|\\]/g,function(a){switch(a){case '"':return'\\"';case "\\":return"\\\\";case "\b":return"\\b";case "\f":return"\\f";case "\n":return"\\n";case "\r":return"\\r";case "\t":return"\\t";default:return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}})+'"';try{JSONObjectArray[0]=JSON.parse(fileText)}catch(a){printErr("JSON Input Data: "+a),quit()}}else if(/\u001e/.test(fileText)){var tempJSONArray=fileText.split("\u001e"),tempJSONArray_preRS=tempJSONArray.shift();tempJSONArray_preRS&&printErr("Error: JSON Sequence text (0) lacking leading Record Seperator (\\u001e): "+tempJSONArray_preRS);for(var j=i=0;i<tempJSONArray.length;i++)if(""!==tempJSONArray[i]&&/\S/.test(tempJSONArray[i]))if(/^\s*\$/.test(tempJSONArray[i])){try{JSONObjectArray[j]=ingestLiterals(tempJSONArray[i],option);var lastParse=1}catch(a){printErr(a),lastParse=0}lastParse&&(j+=1)}else{try{JSONObjectArray[j]=JSON.parse(tempJSONArray[i]),lastParse=1}catch(a){printErr("Error: Unable to parse JSON Sequence text ("+i+"): "+tempJSONArray[i]),lastParse=0}!lastParse||null!==JSONObjectArray[j]&&JSONObjectArray[j].constructor!==Number&&JSONObjectArray[j].constructor!==Boolean||/\s/.test(tempJSONArray[i][tempJSONArray[i].length-1])?lastParse&&(j+=1):(printErr("Error: JSON text sequence ("+(i+1)+") lacking trailing whitespace: "+tempJSONArray[i]),JSONObjectArray[j]=void 0)}}else if(/^\s*\$/.test(fileText))try{JSONObjectArray[0]=ingestLiterals(fileText,option)}catch(a){printErr(a),quit()}else try{JSONObjectArray[0]=JSON.parse(fileText)}catch(a){var primaryParseErrorString=a;option.c&&printErr("Original error: "+a);tempJSONArray=rehabJSON(fileText);for(j=i=0;i<tempJSONArray.length;i++,j++)try{JSONObjectArray[j]=JSON.parse(tempJSONArray[i])}catch(f){printErr("Error in JSON Text ("+(i+1)+"): "+tempJSONArray[i].substring(0,24).replace(/[\n|\r]/g,"")+"\u2026"),printErr(f),--j}}if("a"==multiJSONArg){var JSONObjectArray_temp=[];for(i=0;i<=JSONObjectArray.length-1;i++)JSONObjectArray_temp[i]=JSONObjectArray[i];JSONObjectArray=[];JSONObjectArray[0]=JSONObjectArray_temp}var resultObjects=[];for(i=0;i<JSONObjectArray.length;i++){if(option.x||option.X||option.opArg.constructor===Object&&Object.keys(option.opArg).length)try{JSONObjectArray[i]=alterObject(JSONObjectArray[i],valueArg,fromArg,pathArg,option,i+1,JSONPatchArg)}catch(a){printErr(a);continue}if("$"!==query&&""!==query||option.j||option.r){try{var queryObject=objectifyExpressions([query],{disallowData:!0,allowExpressions:!0,c:option.c})[0].path}catch(a){printErr(a),quit()}try{resultObjects[i]=jsonPath(JSONObjectArray[i],queryObject,option.j||option.r?{resultType:option.d?"PATH_DOTTED":option.r?"PATH_JSONPOINTER":"PATH",singleQuoteKeys:option.q,"P.escapeUnicode":option.u?!0:!1}:null)}catch(a){printErr(a),quit()}}else resultObjects[i]=[JSONObjectArray[i]];void 0!==resultObjects&&resultObjects[i].length||(printErr("No nodes matching "+query+(1<JSONObjectArray.length?" in JSON text "+(i+1):"")),resultObjects[i]=void 0)}for(i=0;i<=resultObjects.length-1;i++)if(void 0!==resultObjects[i]){Array.isArray(resultObjects[i])&&1===resultObjects[i].length&&(resultObjects[i]=resultObjects[i][0]);if(option.N&&null!==resultObjects[i])for(;Array.isArray(resultObjects[i])&&1===resultObjects[i].length;)resultObjects[i].some(function(a){return null!=a&&"object"===typeof a}),resultObjects[i]=resultObjects[i][0];option.a&&!Array.isArray(resultObjects[i])&&(resultObjects[i]=[resultObjects[i]]);option.t&&(null===resultObjects[i]||!Array.isArray(resultObjects[i])&&resultObjects[i].constructor!==Object)&&(option.T=!0);option.l?null===resultObjects[i]?print("0"):resultObjects[i].constructor===Number?print("1"):resultObjects[i].constructor===Boolean?print("1"):resultObjects[i].constructor===String?print(resultObjects[i].length):Array.isArray(resultObjects[i])?print(resultObjects[i].length):resultObjects[i].constructor===Object&&print(Object.keys(resultObjects[i]).length):(option.O&&(resultObjects[i]=sortObject(resultObjects[i])),option.F&&Array.isArray(resultObjects[i])&&(resultObjects[i]=flatten(resultObjects[i])))}option.l&&quit();if("A"==multiJSONArg){var resultObjects_new=[[]];for(i=0;i<=resultObjects.length-1;i++)resultObjects_new[0][i]=resultObjects[i];resultObjects=resultObjects_new}for(i=0;i<=resultObjects.length-1;i++)if(void 0!==resultObjects[i]){if(option.T||option.L||option.J||option.R||option.j||option.r){option.j||option.r||(resultObjects[i]=renderObject(resultObjects[i],option.T?null:option.R?"":"$",option));var resultText=null===resultObjects[i]?option.n?"null":void 0:Array.isArray(resultObjects[i])?resultObjects[i].join("\n"):resultObjects[i].toString()}else{"N"==multiJSONArg&&(spaceArg=0);try{resultText=JSON.stringify(resultObjects[i],null,spaceArg).replace(option.u?/[\u007f-\uFFFF]/g:/[\u007f]/g,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}).replace(option["/"]?/[\/]/g:void 0,"\\/")}catch(a){printErr("JSON.stringify: "+a)}}(option.encoding.w||option.encoding.W)&&(option.r||option.R)&&(resultText=resultText.split("\n").map(function(a){return"#"+encodeURI(a)}).join("\n"));var possibleRS=!option.T&&("S"==multiJSONArg||1<resultObjects.length&&!multiJSONArg)?"\u001e":"";if(void 0!==resultText)if(resultText.length>maxSize.print)jscChunkPrint(possibleRS+resultText);else try{print(possibleRS+resultText)}catch(a){printErr("print "+a)}};
EOT

#shell script
locations=( "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Helpers/jsc" "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Resources/jsc" );for loc in ${locations[@]}; do [ -x "${loc}" ] && jsc="${loc}" && break; done;[ -z "${jsc}" ] && jsc=$(which jsc);if [ -z "${jsc}" ]; then locations=( "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current" "/usr/bin/jsc" "/usr/libexec/webkit2gtk*" );for loc in ${locations[@]}; do jsc=$(find -L "${loc}" -name 'jsc' -maxdepth 2 2>/dev/null);[ -n "${jsc}" ] && break;done;fi;[ -z "${jsc}" ] && echo "Unable to locate a jsc binary!" && exit 1;[ -n "${BASH_VERSION}" ] && local OPTIND OPTARG; declare options;while getopts ":8cKkDSQPAE:Ff:lNLOuo:i:aCIeHhdnqgGJzjsRrTtUWwZ:v:V:x:X:p:M:%/" option; do case "${option}" in 'J'|'L'|'R'|'t'|'j'|'l'|'r'|'t') [ -z "${outputOpt}" ] && outputOpt="${option}" ;;'o')[ -z "${alterOp}" ] && { options+="${option}"; alterOp="${OPTARG}"; } ;;'p')[ -z "${pathArg}" ] && { options+="${option}"; pathArg="${OPTARG}"; } ;;'v'|'V')[ -z "${valueArg}" ] && { options+="${option}"; valueArg="${OPTARG}"; } ;;'f')[ -z "${fromArg}" ] && { options+="${option}"; fromArg="${OPTARG}"; } ;;'x'|'X')[ -z "${JSONPatchArg}" ] && { options+="${option}"; JSONPatchArg="${OPTARG}"; } ;;'i')options+="${option}"; spaceArg="${OPTARG}";;'M')options+="${option}"; multiOutArg="${OPTARG}";;'Z')depthArg="${OPTARG}";;'E')[ -z "${encodingArg}" ] && encodingArg+="${OPTARG/\%/W}";;'h')echo -e "${helpText}" | less; exit;;'?'):;;*)options+="${option}";;esac;done;options+="${outputOpt}";[ $OPTIND -ge 2 ] && shift $((OPTIND-1));queryArg="${1}";fileArg="${2}";[ -f "${queryArg}" ] && [ -z "${fileArg}" ] && { fileArg="${queryArg}"; unset queryArg; };readFileSupport="$(${jsc} -e 'print(typeof readFile === "function")')";if [ -n "${fileArg}" ]; then if [ "${fileArg}" != '/dev/stdin' ] && ! [ -f "${fileArg}" ]; then echo "--> File not found: ${fileArg}" >&2;return 1;elif ! [ -r "${fileArg}" ]; then echo "--> File not readable: ${fileArg}" >&2;return 1;fi;if [ "${readFileSupport}" = "true" ]; then if stat -f %z . &> /dev/null; then fileSize=$(stat -f %z "${fileArg}");elif stat -c %s . &> /dev/null; then fileSize=$(stat -c %s "${fileArg}");elif stat --format %s . &> /dev/null; then fileSize=$(stat --format %s "${fileArg}");fi;if [ "${fileSize}" -ge 2147483648 ]; then echo "--> File exceeds readFile() maximum size (2GiB)!" >&2;return 1;fi;fi;fi;if [ "${readFileSupport}" = "false" ]; then { errOut=$( { { "${jsc}" -e "${JSCode}" -- "${queryArg}" "" "${options}" "${spaceArg}" "${valueArg}" "${pathArg}" "${depthArg}" "${encodingArg}" "${alterOp}" "${fromArg}" "${JSONPatchArg}" "${multiOutArg}" <<< "$(sed '/^$/d' "${fileArg:-/dev/stdin}")" ; } 1>&3 ; } 2>&1); } 3>&1;elif [ -f "${fileArg:=/dev/stdin}" ]; then { errOut=$( { { "${jsc}" -e "${JSCode}" -- "${queryArg}" "${fileArg}" "${options}" "${spaceArg}" "${valueArg}" "${pathArg}" "${depthArg}" "${encodingArg}" "${alterOp}" "${fromArg}" "${JSONPatchArg}" "${multiOutArg}"; } 1>&3 ; } 2>&1); } 3>&1;else [ -t '0' ] && echo -e "$(echo -e "${helpText}" | head -n 1)\nUsage: jpt [options] [query] [filepath] (see jpt -h for more help...)" >/dev/stderr && exit 0; { errOut=$( { { "${jsc}" -e "${JSCode}" -- "${queryArg}" "/dev/stdin" "${options}" "${spaceArg}" "${valueArg}" "${pathArg}" "${depthArg}" "${encodingArg}" "${alterOp}" "${fromArg}" "${JSONPatchArg}" "${multiOutArg}" <<< "$(cat)"; } 1>&3 ; } 2>&1); } 3>&1;fi;if [ -n "$(sed -e '/^--> Debug:/d' <<< "${errOut}")" ]; then /bin/echo "$errOut" >&2; return 1; fi
)

#get a token if we need one (in this case we always do)
function ensureTokenHeader {
	local APIUSER="${1}"
	local APIPASS="${2}"
	local APIURL="${3}"

	#error out if either of these are blank
	[ -z "${APIUSER}" ] && echo "ERROR: NO USER" >&2 && exit
	[ -z "${APIPASS}" ] && echo "ERROR: NO PASSWORD" >&2 && exit

	#if we don't need a new token don't get one
	local epochNow=$(( $(date +"%s") * 1000 ))
	if [ ${epochNow} -lt ${tokenExpiration:-0} -a -n "${tokenBearingHeader}" ]; then
		echo "${tokenBearingHeader}"
		return
	fi

	local tokenRequest=$(/usr/bin/curl -s -q "${APIURL}/uapi/auth/tokens" -X POST -H "Authorization: Basic $(echo -n "${APIUSER}:${APIPASS}" | base64)")
	[ -z "${tokenRequest}" ] && echo "Error: Unable to get token, check credentials, permissions and curl options." >&2 && return 1
	
	#only bad requests have the httpStatus property name
	local httpStatus=$(ljt /httpStatus <<< "${tokenRequest}")
	[ -n "${httpStatus}" ] && echo "Error: $httpStatus" >&2 && return 1

	local token=$(ljt /token <<< "${tokenRequest}")

	#these are GLOBALS so they persist
	tokenExpiration=$(ljt /expires <<< "${tokenRequest}")
	tokenBearingHeader="Authorization: Bearer $token"

	echo "${tokenBearingHeader}"
}

function ensureAPIURL {
	if [ -z "${APIURL}" ]; then
		local enrolledAPIURL=$(defaults read /Library/Preferences/com.jamfsoftware.jamf.plist jss_url 2>/dev/null)
		if [ -n "${enrolledAPIURL}" ]; then 
			echo -n "Enter JSS URL or press reuturn for [${enrolledAPIURL}]: "
			read APIURL
			[ -z "${APIURL}" ] && APIURL=${enrolledAPIURL}
		else
			while [ -z "$APIURL" ]; do
			echo -n "Enter full JSS URL: "
				read APIURL
			done		
		fi
	else
		echo "APIURL: ${APIURL}"
	fi	
}

function ensureAPIUSER {
	if [ -z "${APIUSER}" ]; then
		while [ -z "$APIUSER" ]; do
		echo -n "Enter JSS username: "
			read APIUSER
		done
	else
		echo "APIUSER: ${APIUSER}"
	fi	
}

function ensureAPIPASS {
if [ -z "${APIPASS}" ]; then
	#turn off echo
	stty -echo

	while [ -z "$APIPASS" ]; do
		echo -n "Enter account password: "
		read APIPASS
	done
	#turn on echo
	stty echo
	echo
fi
}

########
# MAIN #
########

ensureAPIURL
ensureAPIUSER
ensureAPIPASS

#trim APIURL to just the host name
APIHOSTNAME=$(sed -e 's/^http[s]*:\/\///g' -e 's/:.*$//' -e 's/\/$//' <<< "${APIURL}")
stampedFolder="scripts-${APIHOSTNAME}-${dateStampNow}"
destinationFolder="${myFolderPath}"/"${stampedFolder}"
destinationCSVFilename="scripts-${APIHOSTNAME}-${dateStampNow}.csv"

#get our token for the UAPI call
tokenHeader="$(ensureTokenHeader "${APIUSER}" "${APIPASS}" "${APIURL}")"
[ -z "${tokenHeader}" ] && exit 1

echo "Querying ${APIHOSTNAME}..."

#get our raw JSON reply
rawJSON=$(/usr/bin/curl -s "${APIURL}/uapi/v1/scripts?page=0&page-size=1000" -X GET -H "${tokenHeader}" )

#if httpStatus is present something went wrong
httpResponse=$(ljt /httpStatus <<< "${rawJSON}")
[ -n "${httpResponse}" ] && echo "Error: $httpResponse" && exit

#get the count of scripts 
scriptCount=$(jpt -l /results <<< "${rawJSON}")
[ ${scriptCount:-0} -eq 0 ] && echo "No Scripts Found. Exiting." && exit

#make output folder since we do have something
mkdir -p "${destinationFolder}"

#remove the script contents
scriptsStrippedJSON=$(jpt -o remove -p '$..scriptContents' <<< "${rawJSON}")

#get the names of the fields with "-RK" (JSON PointeR Keys only), skip first line (root object), escape any quotes, tr newlines to commas, remove trailing comma
csvHeader=$(jpt -JK $.results[0] <<< "${scriptsStrippedJSON}" | tail -n +2 | sed -e 's/"/""/g' | tr $'\n' , | sed -e 's/,$//')

#start CSV with a header
cat <<< "${csvHeader}" > "${destinationFolder}"/"${destinationCSVFilename}"

echo "Archiving scripts locally..."

#make a scripts subfolder
mkdir -p "${destinationFolder}"/scripts

#output scripts each with a csv
for((i=0; i < ${scriptCount:-0}; i++)); do
	#illegal Unix characters : changed to ; and / is changed to \
	scriptName=$(jpt -T $.results[$i].name <<< "$rawJSON" | sed -e 's/:/;/g' -e 's/\//\\/' )
	#indented bullets for the terminal output
	echo -e "\t• ${scriptName}.sh"

	#get the text of the script contents
	scriptContents=$(jpt -T $.results[$i].scriptContents <<< "$rawJSON" )
	#save script with generic .sh for Quicklook if anything, get fancier if you want and analyze the first line
	cat <<< "${scriptContents}" > "${destinationFolder}"/scripts/"${scriptName}".sh

	#create a csv with header and all script metadata, named the same as the script
	cat <<< "${csvHeader}" > "${destinationFolder}"/scripts/"${scriptName}".csv
	csvData=$(jpt -Te $.results[$i] <<< "$scriptsStrippedJSON" | sed -e 's/"/""/g' -e 's/\(.*\)/"\1"/g' | tr $'\n' , | sed -e 's/,$//' -e $'s/\\\\n/\\\n/g')
	#send script metadata to same named csv
	cat <<< "${csvData}" >> "${destinationFolder}"/scripts/"${scriptName}".csv
	#send script metadata to combined CSV
	cat <<< "${csvData}" >> "${destinationFolder}"/"${destinationCSVFilename}"
	
	#maybe you want to run the script
	chmod +x "${destinationFolder}"/scripts/"${scriptName}".sh
done

echo "Done."
[ "$(uname)" == "Darwin" ] && echo "Opening: ${destinationFolder}" && open "${destinationFolder}"
